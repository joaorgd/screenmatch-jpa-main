# Em vez de deixar dados sensíveis (como senhas) ou variáveis de ambiente (como o host do banco)
# fixos no código, usamos placeholders `${...}`. O Spring irá substituir esses valores
# pelos de variáveis de ambiente do sistema, tornando a aplicação segura e flexível
# para diferentes ambientes (desenvolvimento, produção).
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost:5432}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# Classe do Driver JDBC para o PostgreSQL.
spring.datasource.driver-class-name=org.postgresql.Driver

# Dialeto do Hibernate. Informa ao Hibernate como "falar" a variação específica do SQL do PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Gerenciamento automático do esquema do banco (DDL).
# 'update' faz com que o Hibernate compare o modelo de entidades com as tabelas existentes
# e tente aplicar alterações (como criar novas colunas) automaticamente na inicialização.
spring.jpa.hibernate.ddl-auto=update